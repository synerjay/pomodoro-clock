{"version":3,"sources":["beep.wav","components/Break.tsx","components/Buttons.tsx","components/Session.tsx","utils.ts","container/Clock.tsx","App.tsx","index.tsx"],"names":["Break","increment","decrement","breakCount","count","toString","className","id","onClick","xmlns","fill","viewBox","stroke","strokeLinecap","strokeLinejoin","strokeWidth","d","Buttons","reset","start","stop","isPlaying","Session","sessionCount","timeFormatter","minutes","Math","floor","seconds","minutesDisplay","secondsDisplay","Clock","audioRef","useRef","useState","setIsPlaying","clockCount","setClockCount","currentTimer","setCurrentTimer","key","setKey","setBreakCount","setSessionCount","incrementBreak","prevKey","decrementBreak","incrementSession","decrementSession","useEffect","clockInterval","setInterval","current","play","clearInterval","handleStartClock","handleStopClock","handleResetClock","pause","currentTime","duration","size","initialRemainingTime","isLinearGradient","trailColor","colors","remainingTime","target","rel","href","preload","src","require","ref","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb8dbe5f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/beep.372995a9.wav\";","import React from 'react';\n\ninterface breakProps {\n  increment(): void;\n  decrement(): void;\n  breakCount: number;\n}\n\nfunction Break({ increment, decrement, breakCount }: breakProps) {\n  let count: string =\n    breakCount < 10 ? '0' + breakCount.toString() : breakCount.toString();\n\n  return (\n    <div className='BreakTimer p-2 card hover:shadow-xl md:p-7 flex flex-col justify-center'>\n      <h3 className='text-2xl uppercase flex justify-center' id='break-label'>\n        Break:\n      </h3>\n      <div className='BreakButtons flex flex-row justify-center'>\n        <button\n          className='decrementBreak focus:outline-none | transform hover:translate-y-1 hover:bg-opacity-50 | transition ease-out duration-300'\n          id='break-decrement'\n          onClick={decrement}\n        >\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            className='h-6 w-6'\n            fill='none'\n            viewBox='0 0 24 24'\n            stroke='currentColor'\n          >\n            <path\n              strokeLinecap='round'\n              strokeLinejoin='round'\n              strokeWidth={2}\n              d='M19 9l-7 7-7-7'\n            />\n          </svg>\n        </button>\n        <h3\n          className='BreakCount text-primary text-2xl uppercase mx-7'\n          id='break-length'\n        >\n          {count}\n        </h3>\n\n        <button\n          className='incrementBreak focus:outline-none transform hover:-translate-y-1 hover:bg-opacity-50 | transition ease-out duration-300'\n          id='break-increment'\n          onClick={increment}\n        >\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            className='h-6 w-6'\n            fill='none'\n            viewBox='0 0 24 24'\n            stroke='currentColor'\n          >\n            <path\n              strokeLinecap='round'\n              strokeLinejoin='round'\n              strokeWidth={2}\n              d='M5 15l7-7 7 7'\n            />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Break;\n","import React from 'react';\n\ninterface ButtonsProps {\n  reset(): void;\n  start(): void;\n  stop(): void;\n  isPlaying: boolean;\n}\n\nfunction Buttons({ reset, start, stop, isPlaying }: ButtonsProps) {\n  return (\n    <div className='buttons flex flex-row justify-center space-x-7 '>\n      <button\n        className='btn md:border-2 hover:bg-gray-900 hover:text-gray-200 | transition ease-out duration-500'\n        id='start_stop'\n        onClick={isPlaying ? stop : start}\n      >\n        {isPlaying ? (\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            className='h-9 w-9'\n            fill='none'\n            viewBox='0 0 24 24'\n            stroke='currentColor'\n          >\n            <path\n              strokeLinecap='round'\n              strokeLinejoin='round'\n              strokeWidth={2}\n              d='M10 9v6m4-6v6m7-3a9 9 0 11-18 0 9 9 0 0118 0z'\n            />\n          </svg>\n        ) : (\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            className='h-9 w-9'\n            fill='none'\n            viewBox='0 0 24 24'\n            stroke='currentColor'\n          >\n            <path\n              strokeLinecap='round'\n              strokeLinejoin='round'\n              strokeWidth={2}\n              d='M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z'\n            />\n            <path\n              strokeLinecap='round'\n              strokeLinejoin='round'\n              strokeWidth={2}\n              d='M21 12a9 9 0 11-18 0 9 9 0 0118 0z'\n            />\n          </svg>\n        )}\n      </button>\n      <button\n        className='btn md:border-2 hover:bg-gray-900 hover:text-gray-200 | transition ease-out duration-500'\n        id='reset'\n        onClick={reset}\n      >\n        <svg\n          xmlns='http://www.w3.org/2000/svg'\n          className='h-9 w-9'\n          fill='none'\n          viewBox='0 0 24 24'\n          stroke='currentColor'\n        >\n          <path\n            strokeLinecap='round'\n            strokeLinejoin='round'\n            strokeWidth={2}\n            d='M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15'\n          />\n        </svg>\n      </button>\n    </div>\n  );\n}\n\nexport default Buttons;\n","import React from 'react';\n\ninterface SessionProps {\n  increment(): void;\n  decrement(): void;\n  sessionCount: number;\n}\n\nfunction Session({ increment, decrement, sessionCount }: SessionProps) {\n  let count: string =\n    sessionCount < 10 ? '0' + sessionCount.toString() : sessionCount.toString();\n\n  return (\n    <div className='SessionTimer p-2 card hover:shadow-xl md:p-7 flex flex-col justify-center'>\n      <h3 className='text-2xl uppercase flex justify-center' id='session-label'>\n        Session:\n      </h3>{' '}\n      <div className='SessionButtons flex flex-row justify-center'>\n        <button\n          className='decrementWork focus:outline-none | transform hover:translate-y-1 hover:bg-opacity-50 | transition ease-out duration-300'\n          id='session-decrement'\n          onClick={decrement}\n        >\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            className='h-6 w-6'\n            fill='none'\n            viewBox='0 0 24 24'\n            stroke='currentColor'\n          >\n            <path\n              strokeLinecap='round'\n              strokeLinejoin='round'\n              strokeWidth={2}\n              d='M19 9l-7 7-7-7'\n            />\n          </svg>\n        </button>\n        <h3\n          className='SessionCount text-primary text-2xl uppercase mx-7'\n          id='session-length'\n        >\n          {count}\n        </h3>\n        <button\n          className='incrementWork focus:outline-none | transform hover:-translate-y-1 hover:bg-opacity-50 | transition ease-out duration-300'\n          id='session-increment'\n          onClick={increment}\n        >\n          <svg\n            xmlns='http://www.w3.org/2000/svg'\n            className='h-6 w-6'\n            fill='none'\n            viewBox='0 0 24 24'\n            stroke='currentColor'\n          >\n            <path\n              strokeLinecap='round'\n              strokeLinejoin='round'\n              strokeWidth={2}\n              d='M5 15l7-7 7 7'\n            />\n          </svg>\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default Session;\n","export const timeFormatter = (count: number) => {\n  let minutes = Math.floor(count / 60); // the lower rounded value of the division\n  let seconds = count % 60; // the modulus calculates the remaining seoconds after all minutes (60 minutes) have been evenly divided\n\n  let minutesDisplay =\n    minutes < 10 ? '0' + minutes.toString() : minutes.toString();\n  let secondsDisplay =\n    seconds < 10 ? '0' + seconds.toString() : seconds.toString();\n\n  return `${minutesDisplay}:${secondsDisplay}`;\n};\n","import React, { useEffect, useRef, useState } from 'react';\nimport Break from '../components/Break';\nimport Buttons from '../components/Buttons';\nimport Session from '../components/Session';\nimport { timeFormatter } from '../utils';\nimport beep from '../beep.wav';\nimport { CountdownCircleTimer } from 'react-countdown-circle-timer';\n\nfunction Clock() {\n  // Access the Audio DOM element by using useRef hook\n  const audioRef = useRef<HTMLAudioElement>(null); // always set the useRef to initially null\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [clockCount, setClockCount] = useState(25 * 60);\n  const [currentTimer, setCurrentTimer] = useState('Session');\n  const [key, setKey] = useState(0);\n  const [breakCount, setBreakCount] = useState(5);\n  const [sessionCount, setSessionCount] = useState(25);\n\n  // Increment Break Length\n  const incrementBreak = () => {\n    if (!isPlaying && breakCount < 60) {\n      setBreakCount(breakCount + 1);\n      if (currentTimer === 'Break') {\n        setClockCount(breakCount * 60 + 60);\n        setKey((prevKey) => prevKey + 1);\n      }\n    }\n  };\n\n  // Decrement Break Length\n  const decrementBreak = () => {\n    if (!isPlaying && breakCount > 1) {\n      setBreakCount(breakCount - 1);\n      if (currentTimer === 'Break') {\n        setClockCount(breakCount * 60 - 60);\n        setKey((prevKey) => prevKey + 1);\n      }\n    }\n  };\n\n  //Increment Session Length\n  const incrementSession = () => {\n    if (!isPlaying && sessionCount < 60) {\n      setSessionCount(sessionCount + 1);\n      if (currentTimer === 'Session') {\n        setClockCount(sessionCount * 60 + 60);\n        setKey((prevKey) => prevKey + 1);\n      }\n    }\n  };\n\n  //Decrement SessionLength\n  const decrementSession = () => {\n    if (!isPlaying && sessionCount > 1) {\n      setSessionCount(sessionCount - 1);\n      if (currentTimer === 'Session') {\n        setClockCount(sessionCount * 60 - 60);\n        setKey((prevKey) => prevKey + 1);\n      }\n    }\n  };\n\n  // useEffect will detect any changes of component states, e.g. depend on changes of the isPlaying state\n  useEffect(() => {\n    //This function switches the Current Timer to the opposite phase\n    const switchTimer = () => {\n      if (currentTimer === 'Session') {\n        setCurrentTimer('Break');\n        setClockCount(breakCount * 60); // set the Clock count to seconds\n        setKey((prevKey) => prevKey + 1);\n      } else {\n        setCurrentTimer('Session');\n        setClockCount(sessionCount * 60);\n        setKey((prevKey) => prevKey + 1);\n      }\n    };\n\n    let clockInterval: NodeJS.Timer;\n    if (isPlaying && clockCount > 0) {\n      clockInterval = setInterval(() => {\n        setClockCount(clockCount - 1);\n      }, 1000);\n    } else if (isPlaying && clockCount === 0) {\n      clockInterval = setInterval(() => {\n        setClockCount(clockCount - 1);\n      }, 1000);\n      // play audio music here\n      if (audioRef.current) {\n        audioRef.current.play();\n      }\n      setKey((prevKey) => prevKey + 1);\n      switchTimer();\n    }\n    // else {\n    //   clearInterval(clockInterval);\n    // }\n\n    // useEffect hook version of componentWillUnmount\n    return () => clearInterval(clockInterval);\n  }, [isPlaying, breakCount, sessionCount, currentTimer, clockCount]);\n\n  // Start Clock\n\n  const handleStartClock = () => {\n    setIsPlaying(true);\n    // setting setIsPlaying to true will fire the useEffect hook because it is set to depend on the changes of the isPlaying state\n  };\n\n  //Stop Clock\n\n  const handleStopClock = () => {\n    setIsPlaying(false);\n  };\n\n  // Reset the Clock\n\n  const handleResetClock = () => {\n    setBreakCount(5);\n    setSessionCount(25);\n    setCurrentTimer('Session');\n    setClockCount(25 * 60); // set to initial values\n    setIsPlaying(false);\n    if (audioRef.current) {\n      audioRef.current.pause();\n      audioRef.current.currentTime = 0;\n    }\n    setKey((prevKey) => prevKey + 1);\n  };\n\n  interface RemainingTime {\n    remainingTime: number;\n  }\n\n  const RenderTime = ({ remainingTime }: RemainingTime) => {\n    return (\n      <div className='flex flex-col gap-y-5'>\n        <div className='flex flex-row'>\n          <Break\n            increment={incrementBreak}\n            decrement={decrementBreak}\n            breakCount={breakCount}\n          />\n          <Session\n            increment={incrementSession}\n            decrement={decrementSession}\n            sessionCount={sessionCount}\n          />\n        </div>\n        <h3\n          className='flex flex-row justify-center text-2xl uppercase'\n          id='timer-label'\n        >\n          {currentTimer} Timer:{' '}\n        </h3>\n        <h1\n          className='ClockFace flex flex-row justify-center text-8xl'\n          id='time-left'\n        >\n          {timeFormatter(remainingTime)}\n        </h1>\n        <Buttons\n          reset={handleResetClock}\n          stop={handleStopClock}\n          start={handleStartClock}\n          isPlaying={isPlaying}\n        />\n      </div>\n    );\n  };\n\n  return (\n    <div className='flex items-center justify-center flex-col flex-grow w-screen h-screen space-y-10'>\n      <div className='w-full h-full p-5 md:p-10 card hover:shadow-xl flex flex-col items-center justify-center'>\n        <CountdownCircleTimer\n          isPlaying={isPlaying}\n          duration={clockCount}\n          key={key}\n          size={600}\n          strokeWidth={30}\n          initialRemainingTime={\n            currentTimer === 'Session' ? sessionCount * 60 : breakCount * 60\n          }\n          isLinearGradient={true}\n          trailColor='#111827'\n          colors={[\n            ['#4ab6ff', 0.33],\n            ['#ffc726', 0.33],\n            ['#ff4f4f', 0.33],\n          ]}\n        >\n          {RenderTime}\n        </CountdownCircleTimer>\n        <h2 className='text-xs mt-0 md:text-lg md:mt-7'>\n          {' '}\n          Made in React-TypeScript and Tailwind CSS by{' '}\n          <a\n            className='underline'\n            target='_blank'\n            rel='noreferrer'\n            href='https://www.jerometo.com'\n          >\n            Jerome Tolentino\n          </a>\n        </h2>\n      </div>\n      <audio\n        id='beep'\n        preload='auto'\n        src={require('../beep.wav')}\n        ref={audioRef}\n      />\n    </div>\n  );\n}\n\nexport default Clock;\n","import Clock from './container/Clock';\n\nfunction App() {\n  return (\n    <div className='App absolute inset-0 flex flex-grow w-screen items-center justify-center'>\n      <Clock />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}